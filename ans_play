#!/usr/bin/env bash

ANSIBLE_CONF=$(ansible-config dump | awk -F'= ' '/CONFIG_FILE/{print $2}')
ANSIBLE_HOME=$(dirname ${ANSIBLE_CONF})

pushd "${ANSIBLE_HOME}/playbooks" &> /dev/null
yml_list="$(ls -1 *.yml)"

ARG1="${1}"
[[ -z "${ARG1}" ]] && { echo "At least the name of playbook should be supplied (should be last term)"; exit 1; }

ansible_inventory_hosts=$(cat ${ANSIBLE_HOME}/inventory.json | jq -nr 'inputs[] | .hosts | values[]' | sort -u)
ansible_inventory_groups=$(cat ${ANSIBLE_HOME}/inventory.json | jq -r '.all.children[]')

[[ "${ARG1}" != -* ]] && { IS_HOST=$(echo "${ansible_inventory_hosts}" | grep ${ARG1}); }
if [[ -n "${IS_HOST}" ]]; then
  [[ "${ARG1}" != *.spacescience.ro && "${IS_HOST}" == *.spacescience.ro ]] && ARG1="${ARG1}.spacescience.ro"
  TGT_SPEC="-e target=${ARG1}"
  shift
fi

[[ "${ARG1}" != -* && -z "${IS_HOST}" ]] && { IS_GROUP=$(echo "${ansible_inventory_groups}" | grep ${ARG1}); }
if [[ -n "${IS_GROUP}" ]]; then
  TGT_SPEC="-e target=${ARG1}"
  shift
fi

ARG_LIST=( "${@}" )
PLAY="${ARG_LIST[-1]}"
unset ARG_LIST[-1]

IS_PLAY=$(echo "${yml_list}" | grep ${PLAY})
[[ "${PLAY}" != *.yml && "${IS_PLAY}" == *.yml ]] && PLAY="${PLAY}.yml"

ansible-playbook ${TGT_SPEC} "${ARG_LIST[@]}" "${PLAY}"

popd &> /dev/null

