#!/bin/bash

[[ -z "${tools}" ]]&& { echo "tools env var not defined" ; exit 1; }
[[ ! -d "${tools}" ]]&& { echo "${tools} directory does not exists" ; exit 1; }
ROOT_SRC="${tools}/root_git"
ROOT_BASEDIR="${tools}/ROOT"
ROOT_BUILD_DIR="${tools}/ROOT/BUILD"
mkdir -p "${ROOT_BUILD_DIR}"

TAG="${1}"
ROOT_INSTALL="${ROOT_BASEDIR}/${TAG}"
[[ ! -e "${ROOT_INSTALL}" ]] && { echo "Directory ${TAG} not found in ${ROOT_BASEDIR}"; exit 1; }
[[ -d "${ROOT_BUILD_DIR}" ]] && rm -rf ${ROOT_BUILD_DIR}/*
cd "${ROOT_BUILD_DIR}"

if [[ "${2}" == "release" ]]; then
  BUILDTYPE="Release"
else
  BUILDTYPE="RelWithDebInfo"
fi

OS_VER=$(lsb_release -sr)
OS_MAJOR_VER=$(awk -F. '{print $1}' <<< "${OS_VER}")
(( OS_MAJOR_VER >= 23 )) && XRD=${XRD_SYS}

## GCC version
GCCVERSION=$( gcc -dumpversion )
GCC_MAJOR=$( echo ${GCCVERSION}| cut -f1 -d. )

#PEDANTIC="-Wall -Wextra"
PEDANTIC=""

GCCARCH="-march=native"
avx2_enable=$(grep avx2 /proc/cpuinfo &> /dev/null && echo yes)
[[ "${avx2_enable}" == "yes" ]] && AVX="-mavx2"

if [[ -z "${avx2_enable}" ]]; then
avx_enable=$(grep avx /proc/cpuinfo &> /dev/null && echo yes)
[[ "${avx_enable}" == "yes" ]] && AVX="-mavx"
fi

CXXFLAGS="${PEDANTIC} ${GCCARCH} ${AVX}"
##(( GCC_MAJOR >= 6 )) && CXXFLAGS="${CXXFLAGS} -fopt-info-vec"

#command -v nvcc &> /dev/null && CUDA="-DCMAKE_CUDA_STANDARD=14 -Dcuda=1 -Dcudnn=1 -Dtmva-gpu=1"

CMAKE=cmake
command -v cmake3 &> /dev/null && CMAKE=cmake3
${CMAKE} \
-G Ninja \
-DCMAKE_INSTALL_PREFIX=${ROOT_INSTALL} -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DCMAKE_CXX_STANDARD=17 \
-DCMAKE_C_FLAGS="${CXXFLAGS}" -DCMAKE_CXX_FLAGS="${CXXFLAGS}" \
-Dbuiltin_openssl=0 -Dbuiltin_davix=0 -Dbuiltin_fftw3=0 -Dbuiltin_gl2ps=0 -Dbuiltin_unuran=0 \
-Dbuiltin_cfitsio=0 -Dbuiltin_ftgl=0 -Dbuiltin_glew=0 -Dbuiltin_lz4=0 -Dbuiltin_lzma=0 -Dbuiltin_zlib=0 \
-Dbuiltin_gsl=0 -Dbuiltin_pcre=0 -Dbuiltin_afterimage=0 -Dbuiltin_freetype=0 -Dbuiltin_xrootd=0 \
-Drfio=0 -Dcastor=0 -Dglobus=0 -Ddcache=0 -Dchirp=0 -Dglite=0 -Dhdfs=0 -Dpch=0 -Dsapdb=0 -Dsrp=0 \
-Doracle=0 -Dbonjour=0 -Dldap=0 -Dodbc=0 \
-Droot7=1 -Dbuiltin_llvm=1 -Dimt=1 -Dvecgeom=1 -Dveccore=1 -Dbuiltin_veccore=1 -Dfitsio=1 \
-Ddavix=1 -Dgviz=1 -Dqt5web=1 -During=1 -Droofit=1 -Dminuit2=1 -Dminuit2_omp=1 -Dunuran=1 -Dgdml=1 -Dhttp=1 \
-Dccache=1 -Dsoversion=1 -Dgsl_shared=1 ${CUDA} -Dfgci=1 -Dcefweb=1 -Dwebgui=1 \
-Dbuiltin_vdt=1 -Dvdt=1 -Dbuiltin_vc=1 -Dvc=1 -Dcompression_default=zstd \
"${ROOT_SRC}" | tee cmake_out.txt

# -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON
# -DPYTHIA6_LIBRARY="${tools}/heplibs/pythia6/libPythia6.so" \
# -Djemalloc="1" -Dtcmalloc="1"
#-DMONALISA_INCLUDE_DIR="/usr/include" -DMONALISA_LIBRARY="/usr/lib64/libapmoncpp.so" \
#-DPYTHIA8_INCLUDE_DIR="${tools}/heplibs/pythia8/include" -DPYTHIA8_LIBRARY="${tools}/heplibs/pythia8/lib/libpythia8.so" \

echo "Build cmds:
cmake --build . -- -j16
ninja install
"
