debug="1"
trial=""

# Where am i?
# myip=`ip addr show dev eth0 | egrep -o '[1-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n 1`

my_ip_external=`wget -q -O - checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*$//'`
my_ip=

LOG_FILE="/home/adrian/rsync_log"
touch $LOG_FILE
DEST_HOST=iss


sync_history
{
echo sync

}



# Directory to be sync on the source machine.

COMMON_FILES=".bash_completion .bash_profile .bashrc .htoprc bin/ /home/physics-tools/env/ .purple/logs/"
JETS="work/jets/"
DOCUMENTS="Documents/"
DOCS="Documentation/"
PHYSISCS="Physics/"
MAIL="MyMail/"


FILES=""

cd ~
if [ "$1" = "common" ]
then                                                                                                                                                 
   FILES=$COMMON_FILES
elif [ "$1" = "jets" ]                                                                                                                                
then                                                                                                                                                 
    FILES=$JETS
elif [ "$1" = "documents" ]                                                                                                                                
then                                                                                                                                                 
    FILES=$DOCUMENTS
elif [ "$1" = "docs" ]                                                                                                                                
then                                                                                                                                                 
    FILES=$DOCS
elif [ "$1" = "physics" ]                                                                                                                                
then                                                                                                                                                 
    FILES=$PHYSICS
elif [ "$1" = "mail" ]                                                                                                                                
then                                                                                                                                                 
    FILES=$MAIL
elif [ "$1" = "history" ]                                                                                                                                
then                                                                                                                                                 
    sync_hystory
elif [ "$1" = "all" ]                                                                                                                                
then                                                                                                                                                 
    FILES="$COMMON_FILES $JETS $DOCUMENTS"
else                                                                                                                                                 
   echo "Accepted arguments are : "                                                                                                                  
   echo "common, jets, documents, docs, physics, all"
   exit                                                                                                                     
fi          


if [ "$2" = "up" ]
then                                                                                                                                                 
  from=
  to=$DEST_HOST:
elif [ "$2" = "down" ]                                                                                                                                
then                                                                                                                                                 
  from=$DEST_HOST:
  to=
elif [ "$2" = "both" ]                                                                                                                                
then                                                                                                                                                 
  both=1
  from=
  to=$DEST_HOST:
else                                                                                                                                                 
   echo "Accepted 2nd arguments are : "                                                                                                                  
   echo "up, down, both"
   exit                                                                                                                     
fi          


OPTS="-avzWhu --compress-level=9 --log-file=$LOG_FILE --stats"

if [ "$3" = "force" ]
then                                                                                                                                                 
  OPTS="$OPTS --delete --force" 
fi          

# -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
# -r, --recursive             recurse into directories
# -l, --links                 copy symlinks as symlinks
# -p, --perms                 preserve permissions
# -t, --times                 preserve modification times
# -g, --group                 preserve group
# -o, --owner                 preserve owner (super-user only)
# -D                          same as --devices --specials
# --devices                   preserve device files (super-user only)
# --specials                  preserve special files
# -v, --verbose               increase verbosity
# -z, --compress              compress file data during the transfer
# --compress-level=NUM        explicitly set compression level
# -W, --whole-file            copy files whole (w/o delta-xfer algorithm)

# --delete                    delete extraneous files from dest dirs
# --force                     force deletion of dirs even if not empty
# -m, --prune-empty-dirs      prune empty directory chains from file-list
# --stats                     give some file-transfer stats
# -u, --update                skip files that are newer on the receiver



[ -n "$debug" ] && echo $OPTS

transfer()
{
   [ -n "$debug" ] && echo "DEST_HOST = $to"
   [ -n "$debug" ] && echo $FILES

   for file in $FILES
      do
      echo "Send HERE --> DEST"
      a=$from$file
      b=$to$file
      
      [ -n "$debug" ] && echo $from "  -->  " $to
      [ -n "$debug" ] && echo $a "  -->  " $b
      [ -z "$trial" ] && rsync $OPTS $a $b

      done

}

if [ "$both" = "1" ]
then                                                                                                                                                 
   transfer

   temp=$to
   to=$from
   from=$temp
   
   transfer
else                                                                                                                                                 
   transfer
fi          


