#!/usr/bin/env bash

FULLCMD="${0}"
CMD="$(basename ${FULLCMD})"

METHOD="merge"
[[ "${CMD}" =~ pull ]] && METHOD="pull"

REPO_NAME=$(basename $(git config --get remote.origin.url) .git)
I_AM_ON=$(git rev-parse --abbrev-ref HEAD)
HEAD_NAME_ORIGIN=$(git remote show origin | awk -F": " '/HEAD branch/ {print $2}')
##HEAD_NAME_UPSTREAM=$(git remote show upstream | awk -F": " '/HEAD branch/ {print $2}')
HEAD_NAME_UPSTREAM="${HEAD_NAME_ORIGIN}"  ## assume as default that our local clone have the same origin name as the upstream

git checkout ${HEAD_NAME_ORIGIN}
git fetch -t --all
git pull --rebase

if [[ "${METHOD}" == "pull" ]]; then
  git pull --rebase upstream ${HEAD_NAME_UPSTREAM}
else
  git merge --ff-only upstream/${HEAD_NAME_UPSTREAM}
fi

echo "doing push --all ..."
git push --all
echo "done"

I_AM_ON_END=$(git rev-parse --abbrev-ref HEAD)
[[ "${I_AM_ON}" != "${I_AM_ON_END}" ]] && echo "The initial branch was: ${I_AM_ON}"

