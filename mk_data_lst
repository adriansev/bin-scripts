#!/bin/bash

DIR=$1
CURDIR=$(pwd)

file_arg=$2

prefix="file://"

now_str () { /usr/bin/date +%Y%m%d_%H%M%S; }
echoerr () { echo "$@" 1>&2; }

FILE_USER="AnalysisResults.root"
FILE_DATA_AOD="AliAOD.root"
FILE_DATA_ESD="AliESD.root"
ZIPFILE="root_archive.zip"

FILES_LIST="/tmp/file_list_$(now_str)"

[[ -z "${file_arg}" ]] && FILE=${FILE_DATA_AOD}
[[ "${file_arg}" =~ ^[A,a][O,o][D,d]$ ]] && FILE=${FILE_DATA_AOD}
[[ "${file_arg}" =~ ^[E,e][S,s][D,d]$ ]] && FILE=${FILE_DATA_ESD}
[[ "${file_arg}" =~ ^[Z,z][I,i][P,p]$ ]] && FILE=${ZIPFILE}
[[ "${file_arg}" =~ ^[U,u][S,s][E,e][R,r]$ ]] && FILE=${FILE_USER}

## if FILE remains empty, use the second argument as file name
[[ -z "${FILE}" ]] && FILE="${file_arg}"

/usr/bin/find ${DIR} -type f -name ${FILE} > ${FILES_LIST}

while read -r line; do
    size=$(/usr/bin/stat -c %s ${line})
    [[ $size == "0" ]] && { echoerr "File with size 0 .. will be deleted"; rm -rfv ${line};  continue; }

    [[ "${FILE}" == "${ZIPFILE}" ]] && sufix="#AliAOD.root"

    echo ${prefix}${line}${sufix}

done < ${FILES_LIST}

rm -rf ${FILES_LIST}

